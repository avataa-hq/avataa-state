"""first migration

Revision ID: 8b531ffe87b5
Revises: 
Create Date: 2024-05-07 11:51:58.256766+03:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import Inspector


# revision identifiers, used by Alembic.
revision = '8b531ffe87b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn.engine)
    tables = inspector.get_table_names()

    if 'kpi' not in tables:
        op.create_table('kpi',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('val_type', sa.String(), nullable=False),
        sa.Column('multiple', sa.Boolean(), nullable=True),
        sa.Column('object_type', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'object_type')
        )

    if 'granularity' not in tables:
        op.create_table('granularity',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('kpi_id', sa.BigInteger(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('seconds', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['kpi_id'], ['kpi.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'kpi_id')
        )

    if 'kpi_values' not in tables:
        op.create_table('kpi_values',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('kpi_id', sa.BigInteger(), nullable=False),
        sa.Column('granularity_id', sa.BigInteger(), nullable=False),
        sa.Column('object_id', sa.Integer(), nullable=False),
        sa.Column('value', sa.String(), nullable=False),
        sa.Column('record_time', sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column('state', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['granularity_id'], ['granularity.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['kpi_id'], ['kpi.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn.engine)
    tables = inspector.get_table_names()
    if 'kpi_values' in tables:
        op.drop_table('kpi_values')
    if 'granularity' in tables:
        op.drop_table('granularity')
    if 'kpi' in tables:
        op.drop_table('kpi')
    # ### end Alembic commands ###
